const TelegramBot = require('node-telegram-bot-api');

// replace the value below with the Telegram token you receive from @BotFather
const token = '664655265:AAFQaI5nQwThSu4bRPYtRrSIHp0kBpvxiFs';

// Create a bot that uses 'polling' to fetch new updates
const bot = new TelegramBot(token, {polling: true});

// CUSTOM CODE
const options = {
  reply_markup: JSON.stringify({
    inline_keyboard: [
      [{ text: '‚≠ê MyEnglishLab', callback_data: 'stu_mel' }],
      [{ text: 'üìô Islands', callback_data: 'isl' }]
    ]
  })
};
const optionsFormatting = {
  parse_mode: 'HTML'
};
const options3 = {
  reply_markup: JSON.stringify({
    inline_keyboard: [
      [{ text: '‚≠ê MyEnglishLab', callback_data: 'mel' }],
      [{ text: 'üìô Islands', callback_data: 'isl' }],
      [{ text: 'üìπ Video', callback_data: 'video' }]
    ]
  })
};

const optionsStuMel = {
  reply_markup: JSON.stringify({
    inline_keyboard: [
      [{ text: '1Ô∏è‚É£ MEL. –Ø–∫ –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è?', callback_data: 'mel_stu_register' }],
      [{ text: '2Ô∏è‚É£ MEL. –Ø–∫ –≤—ñ–¥–Ω–æ–≤–∏—Ç–∏ –ª–æ–≥—ñ–Ω –∞–±–æ –ø–∞—Ä–æ–ª—å?', callback_data: 'mel_stu_forgot_login_credentials' }]
    ]
  })
};

const options2 = {
  reply_markup: JSON.stringify({
    inline_keyboard: [
      [{ text: '–Ø —Å—Ç—É–¥–µ–Ω—Ç üéì', callback_data: 'stu' }],
      [{ text: '–Ø –≤—á–∏—Ç–µ–ª—å üë©‚Äçüè´', callback_data: 'tea' }]
    ]
  }),
  parse_mode: 'HTML'
};
//

// Matches "/echo [whatever]"
bot.onText(/\/echo (.+)/, (msg, match) => {
  // 'msg' is the received Message from Telegram
  // 'match' is the result of executing the regexp above on the text content
  // of the message

  const chatId = msg.chat.id;
  const resp = match[1]; // the captured "whatever"
  const resp2 = 'https://www.youtube.com/watch?v=jwzeBzfBvOo'; // the captured "whatever"
  console.log(msg);

  // send back the matched "whatever" to the chat
  bot.sendMessage(chatId, msg.from.first_name + ', —Å –∫–∞–∫–∏–º –ø—Ä–æ–¥—É–∫—Ç–æ–º —É –í–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã?', options);
});

// Listen for any kind of message. There are different kinds of
// messages.
bot.on('message', (msg) => {
  const chatId = msg.chat.id;

  // send a message to the chat acknowledging receipt of their message
  bot.sendMessage(chatId, msg.from.first_name + ', –í–∏:', options2);
});
bot.on('start', (msg) => {
  const chatId = msg.chat.id;

  // send a message to the chat acknowledging receipt of their message
  bot.sendMessage(chatId, '–í–∏:', options2);
});
bot.on('callback_query', (msg) => {
  //const chatId = msg.chat.id;
  const chatId = msg.hasOwnProperty('chat') ? msg.chat.id : msg.from.id;
  console.log(msg);
  if (msg.data === 'stu') bot.sendMessage(chatId, '–°—Ç—É–¥–µ–Ω—Ç '+msg.from.first_name+', –æ–±–µ—Ä—ñ—Ç—å –ø—Ä–æ–¥—É–∫—Ç:', options);
  if (msg.data === 'tea') bot.sendMessage(chatId, '–í—á–∏—Ç–µ–ª—å '+msg.from.first_name+', –æ–±–µ—Ä—ñ—Ç—å –ø—Ä–æ–¥—É–∫—Ç:', options3);
  if (msg.data === 'stu_mel') bot.sendMessage(chatId, '–û–±–µ—Ä—ñ—Ç—å –ø–∏—Ç–∞–Ω–Ω—è —è–∫–µ —É –í–∞—Å –≤–∏–Ω–∏–∫–ª–æ:', optionsStuMel);
  if (msg.data === 'mel_stu_register') bot.sendMessage(chatId, 'https://youtu.be/T5cbkDHDUIg');
  if (msg.data === 'mel_stu_forgot_login_credentials') bot.sendMessage(chatId, '–î–ª—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –ª–æ–≥—ñ–Ω—É —Ç–∞ –ø–∞—Ä–æ–ª—é –¥–æ –í–∞—à–æ–≥–æ –∞–∫–∞—É–Ω—Ç—É —Å–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—å —Ñ–æ—Ä–º–æ—é –∑–∞ <strong>–ø–æ—Å–∏–ª–∞–Ω–Ω—è–º –Ω–∏–∂—á–µ</strong>: http://pearson-support.com/elt/', optionsFormatting);
  if (msg.data === 'isl') bot.sendMessage(chatId, 'http://www.ourdiscoveryisland.com/help.php?game=islands&lang=en');
  if (msg.data === 'video') bot.sendMessage(chatId, 'https://www.youtube.com/channel/UC5r0YcRSyZYcET0bmxfzPzg');
});
